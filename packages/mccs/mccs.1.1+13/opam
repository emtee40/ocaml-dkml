opam-version: "2.0"
maintainer: "Louis Gesbert <louis.gesbert@ocamlpro.com>"
authors: [
  "Claude Michel <claude.michel@unice.fr>"
  "Louis Gesbert <louis.gesbert@ocamlpro.com>"
]
homepage: "http://www.i3s.unice.fr/~cpjm/misc/"
bug-reports: "https://github.com/AltGr/ocaml-mccs/issues"
license: ["LGPL-2.1-only WITH OCaml-LGPL-linking-exception" "BSD-3-clause" "GPL-3.0-only"]
dev-repo: "git+https://github.com/AltGr/ocaml-mccs.git"
build: [
  ["dune" "build" "-p" name "-j" jobs]
  ["sh" "-c" "dune build @settests --auto-promote || true"] {with-test}
  ["dune" "runtest" "-p" name "-j" jobs] {with-test}
]
depends: [
  "ocaml"
  "dune" {>= "1.0"}
  "cudf" {>= "0.7"}
  # As evidenced by https://github.com/ocaml/opam/blob/fee5861395d6a575c16a7b403012823829946c88/src_ext/Makefile.packages#L109-L112
  # not needing special C++ handling, the `c++` executable check done by conf-c++ is not strictly necessary. For Windows since cl.exe
  # is both C and C++ compiler, we don't need `c++`.
  # WAS: "conf-c++" {build}
  "conf-c++" {build & os != "win32"}
]
synopsis: "MCCS (which stands for Multi Criteria CUDF Solver) is a CUDF problem solver
developed at UNS during the European MANCOOSI project"
url {
  src: "https://github.com/AltGr/ocaml-mccs/archive/1.1+13.tar.gz"
  checksum: [
    "md5=13504d3b5dcbf0bdc6d95a62de20af4a"
    "sha512=2c2bc3c0e82b53a0e20c2542704eba8e3a2a1884f31b1a0a0079dd22fc02be8a8a62e582bdbf501339be0e9d6824872d737087e0fe150073b29b374505de073d"
  ]
}
