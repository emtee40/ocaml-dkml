.shared_windows_runners: # Cost to spin up Windows runner is up to 3.5 minutes as of 2021-09-14.
  # https://gitlab.com/gitlab-org/ci-cd/shared-runners/images/gcp/windows-containers/-/tree/main/cookbooks/preinstalled-software
  tags:
    - shared-windows
    - windows
    - windows-1809

.diskuv_windows_runners:
  # Capabilities:
  # - Windows 10
  # - official Git 2.33.0.2+ for Windows
  tags:
    - diskuv
    - windows
    - windows-1809

.before_windows: &before-windows
  - date
  - '[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12' # From https://www.msys2.org/docs/ci/#docker, but useful for everything
  - $DKML_CI_PROJECT_PATH_URLENCODED = [uri]::EscapeDataString($env:CI_PROJECT_PATH) # Must be url-encoded per https://docs.gitlab.com/ee/user/packages/generic_packages/
  - $PACKAGE_REGISTRY_GENERIC_URL = "${env:CI_API_V4_URL}/projects/$DKML_CI_PROJECT_PATH_URLENCODED/packages/generic"
  - '$GLAB_CURL_HEADER = "JOB-TOKEN: ${env:CI_JOB_TOKEN}"'

  - $ErrorActionPreference = 'Stop'
  - $ProgressPreference = 'SilentlyContinue'

  # ----------- Chocolatey --------------
  - |
    $oldeap = $ErrorActionPreference; $ErrorActionPreference = "SilentlyContinue";
    & where.exe choco 2> $null;
    $ErrorActionPreference = oldeap;
    if ($LastExitCode -ne 0) {
      if (Test-Path "C:\ProgramData\chocolatey\helpers\chocolateyProfile.psm1") {
        echo "The GitLab runner has Chocolatey but has not been restarted to reflect the new PATH. Will trigger a PowerShell session refresh until you have restarted it."
      } else {
        [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072;
        iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'));
      }
      Import-Module "C:\ProgramData\chocolatey\helpers\chocolateyProfile.psm1";
      refreshenv;
    } else {
      echo "Found Chocolatey";
    }
  - date

  # ----------- Curl -----------

  # curl is a built-in Powershell Alias. Want real curl.exe!
  - Remove-Item Alias:curl

  # ----------- release-cli -----------

  # https://docs.gitlab.com/ee/ci/yaml/index.html#release-cli-for-shell-executors
  - $EXTRASRC = "$PWD\_ci"
  - if (!(Test-Path "$EXTRASRC")) { New-Item -Path "$EXTRASRC" -ItemType Directory }
  - $RELCLI = "$EXTRASRC\releasecli"
  - if (!(Test-Path "$RELCLI")) { New-Item -Path "$RELCLI" -ItemType Directory }
  - if (!(Test-Path "$RELCLI\release-cli.exe")) { Invoke-WebRequest -Uri "https://release-cli-downloads.s3.amazonaws.com/latest/release-cli-windows-amd64.exe" -OutFile "$RELCLI\release-cli.exe" }
  - $env:PATH += ";$RELCLI"
  - release-cli -v
  - date

.before_setupmachine: &before-setupmachine
  # ninja needed for 'cmake -G Ninja' (on GitLab Windows SaaS the default generator would be Visual Studio 2019 ... aka. MSBuild)
  - choco upgrade ninja -y --no-progress

.windows:before-script-shared-setupmachine:
  extends:
  - .shared_windows_runners
  before_script:
    - *before-windows
    - *before-setupmachine
