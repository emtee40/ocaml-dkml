opam-version: "2.0"
synopsis: "DkML network installer generator for OCaml"
description:
  "Generates a network installer for OCaml, including Visual Studio and Git on Windows, and including a OCaml compiler built during installation time"
maintainer: ["opensource+dkml@support.diskuv.com"]
authors: ["Diskuv, Inc. <opensource+dkml@support.diskuv.com>"]
license: "Apache-2.0"
homepage: "https://github.com/diskuv/dkml-installer-ocaml"
bug-reports: "https://github.com/diskuv/dkml-installer-ocaml/issues"
depends: [
  "dune" {>= "2.9"}
  "odoc" {>= "1.5.3" & with-doc}
  "ocaml" {>= "4.12.1~"}
  "dkml-installer-ocaml-common" {= version}
  "dkml-component-ocamlcompiler-network" {>= "4.14.2~" & < "4.14.3~"}
  "dkml-component-offline-desktop-full" {>= "0.1.0"}
  "dkml-component-offline-opamshim" {>= "2.2.0~alpha0~20221104"}
  "dkml-install-installer" {>= "0.5.2"}
]
build: [
  ["dune" "subst"] {dev}
  [
    "dune"
    "build"
    "-p"
    name
    "-j"
    jobs
    "--promote-install-files=false"
    "@install"
    "@runtest" {with-test}
    "@doc" {with-doc}
  ]
  ["dune" "install" "-p" name "--create-install-files" name]
]
dev-repo: "git+https://github.com/diskuv/dkml-installer-ocaml.git"
build-env: [
  OCAMLRUNPARAM = "b"
]
install: [
  # Create the installer executable after `dune install` (which is after
  # `build:[]` section) so Dune can do plugin rewriting since Dune edits (yes!)
  # the executables.
  # The installers will be in $OPAM/share/dkml-installer-ocaml/.
  # For the benefit of Windows and macOS we keep the build directory name ("iw")
  # small.
  [ "install" "-d" "%{_:share}%/w" "%{_:share}%/t" ]
  [
    "_build/install/default/bin/dkml-installer-ocaml-network-create-installers%{exe}%"
    #   Debug logs
    "-vv"
    "--program-version"
    "2.1.2"

    "--component=ocamlcompiler-network"
    "--component=offline-desktop-full"
    "--component=offline-opamshim"

    # Only Windows, Linux (dockcross manylinux2014) and Darwin Intel which
    # corresponds to the build environments of GitHub workflow setup-dkml.yml.
    # Later can add Dune cross-compiler to get Darwin ARM64.
    "--abi=windows_x86"
    "--abi=windows_x86_64"
    "--abi=linux_x86"
    "--abi=linux_x86_64"
    "--abi=darwin_x86_64"
    "--abi=darwin_arm64"

    "--work-dir"
    "%{_:share}%/w"
    "--target-dir"
    "%{_:share}%/t"

    "--runner-admin-exe"
    "_build/install/$(dune-context)/bin/dkml-installer-ocaml-network-admin-runner%{exe}%"
    "--runner-user-exe"
    "_build/install/$(dune-context)/bin/dkml-installer-ocaml-network-user-runner%{exe}%"

    # $(dune-context) is a macro for the correct Dune context directory based on the target ABI
    "--packager-install-exe"
    "_build/install/$(dune-context)/bin/dkml-installer-ocaml-network-package-install%{exe}%"
    "--packager-uninstall-exe"
    "_build/install/$(dune-context)/bin/dkml-installer-ocaml-network-package-uninstall%{exe}%"
    "--packager-setup-bytecode"
    "_build/install/$(dune-context)/bin/dkml-installer-ocaml-network-package-setup.bc%{exe}%"
    "--packager-uninstaller-bytecode"
    "_build/install/$(dune-context)/bin/dkml-installer-ocaml-network-package-uninstaller.bc%{exe}%"
  ]
]
url {
  src: "https://gitlab.com/dkml/distributions/dkml/-/releases/2.1.2/downloads/src.dkml-installer-ocaml.tar.gz"
  checksum: [
    "sha512=7fd958af6195a4edc6bcae9d9aac627f1a661bcdf2eb7a948689334fb3df3722e4ee69a593e00abae4e7c632fb89b3731613ff701c388c26ceae07a996ee8461"
  ]
}
